#!/bin/bash
# A mechanism to pass arbitrary condiments
#  and launch synergys with different configs
# Copyright (c) 2015 haxwithaxe
# License: GPLv3
#
# Link this to synergyps for server or synergypc for client

set -ex

SYNERGYS=/usr/bin/synergys
CONFIG_DIR=$HOME/.config/synergy
DEFAULT_PROFILE=default
SCRIPT_NAME=$(basename $0)

ALIASES=$CONFIG_DIR/aliases
DEBUG=/dev/null
LAST_CLIENT_FILE=/tmp/${this_script}.last

if ! [ -d $CONFIG_DIR ] ;then
	mkdir -p $CONFIG_DIR
fi

usage(){
	cat - >&2 <<EOM
$(basename $0) [-p|--profile <profile>] [--set-default <profile>] [-c|--config <config file>] [-h|--help]
EOM
}

# Create a new profile
# $profile: Profile name
# $config: Configuration filename
set_profile(){
	local profile="$1"
	local config="$2"
	echo Creating profile: $profile
	mv "$config" "$CONFIG_DIR/${profile}.conf"
}

set_default(){
	local profile="$1"
	echo Set default profile to: $profile
	ln -sf $CONFIG_DIR/${profile}.conf $DEFAULT_PROFILE
}

# Naively add profile alias.
#
# Arguments:
#     1: Profile name.
#     2: Alias rule.
#
# Note: This might be confused by a profile with the same name (in favor of the profile).
#
add_alias(){
	local profile=$1
	shift
	local profile_alias="$@"
	echo "${profile}=${profile_alias}" >> $ALIASES
}

match_profile(){
	local possible_profile=$1
	for p in $(ls $CONFIG_DIR/*.conf); do
		match=$(awk "/${possible_profile}/ {print \$0}" <<< $(basename $p .conf))
		if [ "$match" != "" ]; then
			echo $match
		fi
	done
}


match_alias(){
	local possible_alias=$1
	local linestart=${2:-""}
	if [ ! -f "$CONFIG_DIR/aliases" ]; then
		return 0
	fi
	for re in $(cat "$CONFIG_DIR/aliases"); do
		match=$(awk "/$linestart$(cut -d'=' -f 2- <<< $re)/ {print \$0}" <<< $possible_alias)
		if [[ "$match" != "" ]]; then
			echo $match
		fi
	done
}


# Print the hostnames that match aliases and the hostname fragment.
#
# Arguments:
#     1: A hostname fragment.
# Side Effects:
#     stdout: A newline separated list of hostnames that match aliases that match the hostname fragment.
#
match_hostname() {
	hostnames=$(compgen -W "$(list_hostnames)" -- "$1")
	for h in ${hostnames}; do
		match_alias $h '^'
	done
}


profile_completion(){
	local profile_fragment=$1
	(1
		match_profile $profile_fragment
		match_hostname $profile_fraagment
		match_alias $profile_fragment
	) | sort -u
}


# Kill all synergys instances on the local machine.
kill_synergy(){
	(killall synergys || killall -9 synergys || echo synergys was not running) 2>/dev/null
}


# Kills all instances of synergyc on the target client.
# 
# Arguments:
#     1 (optional): host, Hostname of the target machine.
#
# Side Effects:
#     file: Writes the hostname to $LAST_CLIENT_FILE for future reference.
#
kill_client(){
	local host=${1:-"$(cat $LAST_CLIENT_FILE)"}
	ssh $host -- "killall synergyc || killall -9 synergyc || echo synergyc was not running on $host" 2>/dev/null || echo "Could not connect to $host"
	echo -n > $LAST_CLIENT_FILE
}


# Use the given profile
use_profile(){
	local profile=$1
	kill_synergy > $DEBUG
	$SYNERGYS -c $CONFIG_DIR/${profile}.conf > $DEBUG && echo "synergys is running with profile \"$profile\""
	start_client "$profile"
}

use_default(){
	use_profile $DEFAULT_PROFILE 
}

# List all nonderived profiles
#
# Side Effects:
#     stdout: A newline separated list of profile names.
#
list_profiles(){
	for profile in $(ls $CONFIG_DIR/*.conf); do
		echo $(basename $profile .conf)
	done
}
# List all alias rules.
#
# Side Effects:
#     stdout: A newline separated list of alias rules.
#
list_aliases(){
	cat $CONFIG_DIR/aliases
}

# List all known hostnames and ssh config hosts.
#
# Side Effects:
#     stdout: A newline separated list of hostnames.
#
list_hostnames(){
	(
		compgen -A hostname ""
		grep "^Host " $HOME/.ssh/config | cut -d" " -f2-
	) 2>&1 \
	| sort -u | grep -v '^ip6-all'
}

# Validate profile names.
#
# Profile names must be:
#   * A real profile name.
#   * A match for an alias rule.
#   * A hostname in ssh configs
#   * A hostname in /etc/hosts
#
# Arguments:
#     1: Profile name
validate_profile(){
	local profile="$1"
	if [ ! -f "$CONFIG_DIR/${profile}.conf" ]; then
		if [ -f "$CONFIG_DIR/aliases" ]; then
			for re in $(cat "$CONFIG_DIR/aliases"); do
				match=$(awk "$(cut -d'=' -f2- <<< $re) {print \$0}" <<< $profile)
				if [[ "$match" != "" ]]; then
					client=$profile
					profile=$(cut -d'=' -f1 <<< $re)
					client=${client:-$(validate_profile $profile)}
					echo $client
					return 0
				fi
			done
		fi
		echo "ERROR: "${profile}" is not an existing profile." 1>&2
		usage
		exit 1
	fi
}

validate_default(){
	local default="$1"
	if [ "$default" != "default" ] && [ ! -f $CONFIG_DIR/${default}.conf ] ;then
		echo -e "ERROR: The default profile is not set.\nuse: $SCRIPT_NAME --default <existing profile name> or $SCRIPT_NAME --default --config <config file>" >&2
		usage
		exit 1
	fi
}

validate_config(){
	local config="$1"
	if ! [ -f $config ]; then
		echo "ERROR: \"${config}\" is not a file." >&2
		usage
		exit 1
	fi
}

stop_all(){
	local client=$1
	local profile=$2
	kill_synergy
	kill_client $client
}

start_client(){
	local profile=$1
	local client=${2:-$profile}
	server_ip=$(ip addr show | awk '/inet .* global/ { split($2, a,"/"); print a[1] }' | head -n1)
	if [ -n "$server_ip" ]; then
		kill_client $client > $DEBUG
		stderr=$(ssh $client -- "synergyc --display :0.0 $server_ip" 3>&1 2>&3 1>/dev/null)
		if [[ $? -ne 0 ]]; then
			echo $stderr
		else
			echo -n $client > $LAST_CLIENT_FILE
			echo "synergyc is running on $client"
		fi
	else
		echo "Couldn\'t determine the IP address of this machine." >&2
		exit 1
	fi
}

eval set -- $(getopt -o "hlak:p:c:" --long "help,list-profiles,list-aliases,list-hostnames,match-alias:,match-hostname:,profile-completion:,completion,kill-all,kill:,profile:,config:,host:,set-default:" -n "$this_script" -- "$@")


while true; do
	case "$1" in
		-h|--help)
			usage
			exit 1
			;;
		-l|--list-profiles)
			list_profiles
			exit 0
			;;
		-a|--list-aliases)
			list_aliases
			exit 0
			;;
		--list-hostnames)
			list_hostnames
			exit 0
			;;
		--match-alias)
			shift
			echo $( match_alias $1 | awk '1' ORS=' ' )
			exit 0
			;;
		--match-profile)
			shift
			echo $( match_profile $1  | awk '1' ORS=' ' )
			exit 0
			;;
		--match-hostname)
			shift
			echo $( match_hostname $1 | awk '1' ORS=' ' )
			exit 0
			;;
		--profile-completion)
			shift
			echo $( profile_completion $1 | awk '1' ORS=' ' )
			exit 0
			;;
		--completion)
			shift
			echo "-h -l -a -k -p -c --help --list-profiles --list-aliases --match-alias --profile-completion --kill-all --kill --profile --config --host --set-default"
			exit 0
			;;
		--kill-all)
			stop_all
			exit
			;;
		-k|--kill)
			shift
			kill_client=true
			;;
		-p|--profile)
			shift
			profile="$1"
			shift
			validate_profile $profile
			;;
		-c|--config)
			shift
			config="$1"
			shift
			validate_config $config
			;;
		--host) 
			shift
			client="$1"
			shift
			;;
		--add-alias)
			shift
			profile_alias=$1
			shift
			;;
		--set-default)
			shift
			default="$1"
			shift
			;;
		--)
			synergy_args="$@"
			break
			;;
	esac
done

if [ -n "$default" ] &&  [ "$default" != "default" ]; then
		validate_default
		set_default $default
elif [ -n "$profile" ]; then
	if [ -n "$config" ]; then
		set_profile $config
	elif [ $stop_all ]; then
		kill_synergy
		kill_client
	elif [ -n "$profile_alias" ]; then
		add_alias "$profile" "$profile_alias"
	else
		use_profile "$profile"
	fi
elif [ -n "$config" ]; then
	set_profile tmp
	use_profile tmp
	sleep 5
	rm $CONFIG_DIR/tmp.conf
else
	use_default
fi
